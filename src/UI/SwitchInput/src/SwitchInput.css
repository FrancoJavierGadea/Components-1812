:host {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    display: block;
    position: relative;

    --sw-cursor: pointer;
    
    --sw-width: 2em;
    --sw-height: 1em;
    --sw-padding: 0.1em;
    --sw-border-radius: 0.1em;

    --sw-track-height: 100%;
    --sw-track-width: 100%;
    
    --sw-thumb-width: 1em;
    --sw-thumb-height: 1em;
    --sw-thumb-border-radius: 0.1em;

    --sw-track-transition: background-color 0.2s ease-out, border-color 0.2s ease-out;
    --sw-thumb-transition: translate 0.2s ease-out, background-color 0.2s ease-out, border-color 0.2s ease-out;
    
    /* Theme */
    --sw-track-color: #90caf9;
    --sw-checked-track-color: #42a5f5;

    --sw-thumb-color: #222;
    --sw-checked-thumb-color: #0c0c0c;
    
    --sw-track-bg: #222;
    --sw-checked-track-bg: #0c0c0c;

    --sw-thumb-bg: #eeeeee;
    --sw-checked-thumb-bg: #fafafa;

    --sw-track-bg-image: unset;
    --sw-checked-track-bg-image: unset;
    --sw-thumb-bg-image: unset;
    --sw-checked-thumb-bg-image: unset;

    /* Borders */
    --sw-track-border-width: 1px;
    --sw-track-border-style: solid;
    --sw-track-border-color: #444;
    
    --sw-checked-track-border-width: 1px;
    --sw-checked-track-border-style: solid;
    --sw-checked-track-border-color: #555;
    
    --sw-thumb-border-width: 1px;
    --sw-thumb-border-style: solid;
    --sw-thumb-border-color: #222;
    
    --sw-checked-thumb-border-width: 1px;
    --sw-checked-thumb-border-style: solid;
    --sw-checked-thumb-border-color: #222;
    
    /* Shadows */
    --sw-track-shadow: 0 3px 10px #0000003a;
    --sw-thumb-shadow: 0 2px 8px #0000004a;

    /*Focus*/
    --sw-focus-track-outline-color: #0288d1;
    --sw-focus-track-outline-width: 0.2em;

    /*Disabled*/
    --sw-disabled-track-bg:  #555;
    --sw-disabled-track-border: 1px solid #666;
    --sw-disabled-thumb-bg: #777;
    --sw-disabled-thumb-color: #aaa;

    /* Content */
    --sw-content-padding: 0;
    --sw-content-margin: 0;
    --sw-content-color: currentColor;
    --sw-content-font-size: 1em;
    --sw-content-font-family: sans-serif;
    --sw-content-font-weight: normal;
    --sw-content-font-style: normal;

    label {
        display: flex;
        align-items: center;
    }
    input[type="checkbox"] {
        display: none;
    }
}
/*MARK: Switch */
:host .switch {
    position: relative;

    width: var(--sw-width);
    height: var(--sw-height);
    padding: var(--sw-padding);
    
    cursor: var(--sw-cursor);    

    display: flex;
    align-items: center;
    justify-content: center;

    .track {
        flex: none;
        position: relative;
        width: var(--sw-track-width);
        height: var(--sw-track-height);

        .track-item {
            position: absolute;
            top: 0;
            left: 0;
            width: 50%;
            height: 100%;

            display: flex;
            justify-content: center;
            align-items: center;
        }
    }
    .thumb {
        position: relative;
        width: 50%;
        height: 100%;

        display: flex;
        align-items: center;
        justify-content: center;
        
        .thumb-item {
            box-sizing: border-box;
            flex: none;

            width: var(--sw-thumb-width);
            height: var(--sw-thumb-height);

            display: flex;
            align-items: center;
            justify-content: center;
        }
    }
}
:host .switch {
    &:not([variant~="thin-track"]) {
        background-color: var(--sw-track-bg);
        background-image: var(--sw-track-bg-image);

        border: var(--sw-track-border-width) var(--sw-track-border-style) var(--sw-track-border-color);
        border-radius: var(--sw-border-radius);

        transition: var(--sw-track-transition);
    }
    &[variant~="thin-track"] .track {
        background-color: var(--sw-track-bg);
        background-image: var(--sw-track-bg-image);
        
        border: var(--sw-track-border-width) var(--sw-track-border-style) var(--sw-track-border-color);
        border-radius: var(--sw-border-radius);

        transition: var(--sw-track-transition);
    }

    .track {
        color: var(--sw-track-color);
    } 
    .thumb {

        color: var(--sw-thumb-color);
        transition: var(--sw-thumb-transition);

        .thumb-item {
            background-color: var(--sw-thumb-bg);
            background-image: var(--sw-thumb-bg-image);
            border: var(--sw-thumb-border-width) var(--sw-thumb-border-style) var(--sw-thumb-border-color);
            
            border-radius: var(--sw-thumb-border-radius);
            box-shadow: var(--sw-thumb-shadow);
        }
    }
}
:host .switch[checked] {

    &:not([variant~="thin-track"]) {
        background-color: var(--sw-checked-track-bg);
        background-image: var(--sw-checked-track-bg-image);
        border: var(--sw-checked-track-border-width) var(--sw-checked-track-border-style) var(--sw-checked-track-border-color);
    }
    &[variant~="thin-track"] .track {
        background-color: var(--sw-checked-track-bg);
        background-image: var(--sw-checked-track-bg-image);
        border: var(--sw-checked-track-border-width) var(--sw-checked-track-border-style) var(--sw-checked-track-border-color);
    }

    .track {
        color: var(--sw-checked-track-color);
    }
    .thumb {
        color: var(--sw-checked-thumb-color);

        .thumb-item {
            background-color: var(--sw-checked-thumb-bg);
            background-image: var(--sw-checked-thumb-bg-image);
            border: var(--sw-checked-thumb-border-width) var(--sw-checked-thumb-border-style) var(--sw-checked-thumb-border-color);
        }
    }
}
/*MARK: Not vertical*/
:host .switch:not([variant~="vertical"]) {

    .thumb {
        translate: 0 0;
    }
    &[checked] .thumb {
        translate: 100% 0;
    }

    &[variant~="thin-track"] {

        --sw-track-height: 50%;
        --sw-track-width: 100%;
        
        .thumb {
            left: calc(-1 * var(--sw-track-border-width));
        }

        &[checked] .thumb {
            left: unset;
            right: calc(-1 * var(--sw-track-border-width));
        }
    }

    &[variant~="rounded"] {
        --sw-border-radius: var(--sw-height);
        --sw-thumb-border-radius: 50%;
    }
}
/*MARK: Vertical*/
:host .switch[variant~="vertical"] {

    --sw-width: 1em;
    --sw-height: 2em;

    .thumb {
        width: 100%;
        height: 50%;

        translate: 0 100%;
    }
    &[checked] .thumb {
        translate: 0 0;
    }

    .track .track-item {
        width: 100%;
        height: 50%;
        
        translate: 0 0;
    }
    &[checked] .track .track-item {
        translate: 0 100%;
    }
    

    &[variant~="thin-track"] {

        --sw-track-height: 100%;
        --sw-track-width: 50%;

        .thumb {
            bottom: calc(-1 * var(--sw-track-border-width));
        }
        &[checked] .thumb {
            bottom: unset;
            top: calc(-1 * var(--sw-track-border-width));
        }
    }

    &[variant~="rounded"]{
        --sw-border-radius: var(--sw-width);
        --sw-thumb-border-radius: 50%;
    }
}
/*MARK: Disabled*/
:host([disabled]) {
    
    cursor: not-allowed;
    pointer-events: none;

    .thumb-item {
        background-color: var(--sw-disabled-thumb-bg);
        border: var(--sw-disabled-thumb-border);
    }

    .switch:not([variant~="thin-track"]) {
        background-color: var(--sw-disabled-track-bg);
        border: var(--sw-disabled-track-border);
    }
    .switch[variant~="thin-track"] .track {
        background-color: var(--sw-disabled-track-bg);
        border: var(--sw-disabled-track-border);
    }
}
/*MARK: Focus*/
:host(:focus) {

    .switch:not([variant~="thin-track"]) {
        outline: var(--sw-focus-track-outline-width) solid var(--sw-focus-track-outline-color);
        margin: var(--sw-focus-track-outline-width);
    }
    .switch[variant~="thin-track"] .track {
        outline: var(--sw-focus-track-outline-width) solid var(--sw-focus-track-outline-color);
    }
}

/*MARK: Slot checked and unchecked */
:host .switch {
    ::slotted([data-checked]){
        display: none;
    }
}
:host .switch[checked] {
    ::slotted([data-checked]){
        display: unset;
    }
    ::slotted([data-unchecked]){
        display: none;
    }
}